sudo: required

language: minimal

services:
  - docker

env:
  - POSTGRES_IMAGE=postgres:11.1-alpine CLAIR_DB_IMAGE=aporeto/clair-db:latest CLAIR_VERSION=v2.0.8 CLAIR_LOCAL_SCAN_IMAGE=clair-local-scan

install:
  - docker build -t $CLAIR_LOCAL_SCAN_IMAGE --build-arg VERSION=$CLAIR_VERSION clair

before_script:
  - docker run -d --name postgres -e 'PGDATA=/var/lib/postgresql/clair' -e POSTGRES_PASSWORD=password $CLAIR_DB_IMAGE
  - until docker run --rm -it --link postgres:postgres -e PGPASSWORD=password $CLAIR_DB_IMAGE pg_isready -U postgres -h postgres; do sleep 1; done
  - docker run -d --name clair --link postgres:postgres $CLAIR_LOCAL_SCAN_IMAGE

script:
  - travis_wait 40 ./check.sh

after_success:
  - docker stop clair
  - docker exec postgres pg_dumpall -U postgres > pg.data
  - docker stop postgres
  - docker run -d --name vanilla -e 'PGDATA=/var/lib/postgresql/clair' -e POSTGRES_PASSWORD=password $POSTGRES_IMAGE
  - until docker run --rm -it --link vanilla:postgres -e PGPASSWORD=password $POSTGRES_IMAGE pg_isready -U postgres -h postgres; do sleep 1; done
  - docker exec -i vanilla psql -U postgres < pg.data
  - docker stop vanilla
  - docker commit vanilla aporeto/clair-db:latest
  - docker tag aporeto/clair-db:latest aporeto/clair-db:$(date +%Y-%m-%d)
  - mkdir -p clair-db
  - docker save aporeto/clair-db:latest > clair-db/clair-db.docker

before_deploy:
  - git config --local user.name "ci"
  - git config --local user.email "ci@aporeto.com"
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +%Y-%m-%d)}
  - git tag $TRAVIS_TAG

deploy:
  - provider: script
    script:
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" &&
      docker push aporeto/clair-db:$(date +%Y-%m-%d) &&
      docker push aporeto/clair-db:latest
    skip-cleanup: true
  - provider: releases
    api_key: "$GH_TOKEN"
    file: clair-db/clair-db.docker
    skip_cleanup: true
